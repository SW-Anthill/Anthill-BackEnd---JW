plugins {
	id 'org.springframework.boot' version '2.6.7'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'anthill'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	asciidoctorExtensions
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'mysql:mysql-connector-java'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.projectlombok:lombok:1.18.24'
	implementation 'org.mindrot:jbcrypt:0.4'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

ext {
	snippetsDir = file('build/generated-snippets')
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor { // asciidoctor 작업 구성
	configurations 'asciidoctorExtensions' // 위에서 작성한 configuration 적용
	dependsOn test // test 작업 이후에 작동하도록 하는 설정
	inputs.dir snippetsDir // snippetsDir 를 입력으로 구성
}

bootJar {
	dependsOn asciidoctor
	copy {
		from "${asciidoctor.outputDir}"            // /html5를 사용하지 않는다!
		into 'src/main/resources/static/docs'    // /static/docs로 복사!
	}
}

jar {
	enabled = false
}
